# coding: utf-8

# 偶数桁のとき N + rev(N)の外側から順に同じ値を取る.
#     a b c d e f
#   + f e d c b a
#   -------------
#   i j k l m n o
# を考える.
# 真ん中の足し算 cd + dc において, d + c が繰り上がれば, l, m の一方は
# 偶数となる. よって cd + dc は繰り上がらない.
# b + e が繰り上がるとすると, j と o のどちらかは偶数となる.
# a + f が繰り上がるとすると, e + b は偶数となり, c + d も繰り上がる必要がある
# このとき, l と m のどちらかは偶数となる.
# よって偶数桁の和はすべて繰り上がらない.
# 2 桁の選びかたは (1, 2), (1, 4), (1, 6), (1, 8), (2, 1), (2, 3), (2, 5), (2, 7),
# (3, 2), (3, 4), (3, 6), (3, 8), (4, 1), (4, 3), (4, 5), (5, 2), (5, 4), (6, 1),
# (6, 3), (7, 2), (8, 1) の 20 通り
# 0 を含める場合は (0, 1), (1, 0), (0, 3), (3, 0), (0, 5), (5, 0), (0, 7), (7, 0),
# (0, 9), (9, 0) を含めた 30 通り
# n を偶数とすると, n 桁の数の選びかたは 20 * 30 ^ (n / 2 - 1) 通り

# 1桁 ... a + a は偶数なので解なし.
# 3桁 ... abc + cba の各桁の和はそれぞれ, a + c, b + b, c + a であり, b + b は
#         偶数なので c + a > 10 かつ奇数, b + b <= 8 である
#         (a, c) = (2, 9), (3, 8), (4, 9), (4, 7), (5, 8), (5, 6), ..., (8, 9),
#                  (8, 7), (8, 5), (8, 3), (9, 8), (9, 6), (9, 4), (9. 2) の 20 通り.
#         b = 0, 1, 2, 3, 4 の 5 通り.
#         よって 20 * 5 = 100 通り
# 5桁 ... abcde を外側 (a, e), 内側 (b, d), 真ん中(c) に分ける.
#         このとき, c + c は偶数なので, 4 桁目の d + b は繰り上がる必要があるが,
#         2 桁目の b + d も繰り上がり, 1 桁目は a + e + 1, 5 桁目は e + a となり,
#         どちらかが偶数となる. よって解なし
# 7桁 ... 次の筆算を考える. 3段目は繰り上がり
#      a b c d e f g
#  +   g f e d c b a
#  + ? ? ? ? ? ? ? ?
# ------------------
#    i j k l m n o p
#
# m が奇数になるためには e + c の繰り上がりが必要. よって e + c > 10
# 筆算は下のようになる
#      a b c d e f g
#  +   g f e d c b a
#  + ? ? 1 ? 1 ? ? ?
# ------------------
#    i j k l m n o p
#
# b + f + 1 = k と f + b + ? = o が奇数になるためには, 2 桁目の f + b + ?
# の ? = 1 でなければならない. よって g + a > 10.
#      a b c d e f g
#  +   g f e d c b a
#  + ? ? 1 ? 1 ? 1 ?
# ------------------
#    i j k l m n o p
#
# また明らかに g + a + ? = p の ? は 0 なので g + a > 10 かつ奇数
#      a b c d e f g
#  +   g f e d c b a
#  + 1 0 1 ? 1 ? 1 0
# ------------------
#    i j k l m n o p
#
# これより b + f < 10 かつ偶数であることがり, e + c > 10 かつ奇数である.
#      a b c d e f g
#  +   g f e d c b a
#  + 1 0 1 ? 1 0 1 0
# ------------------
#    i j k l m n o p
#
# よって, d + d < 10 である
#      a b c d e f g
#  +   g f e d c b a
#  + 1 0 1 0 1 0 1 0
# ------------------
#    i j k l m n o p
#
# 以上をまとめると, a + g > 10 かつ奇数, b + f < 10 かつ偶数, c + e > 10 かつ奇数,
# d < 4 であることが分かる.
# (a, g) の選びかたは 0 を含まない 2 桁の選びかたと同じで 20 通り.
# (b, f) = (0, 0), (0, 2), (0, 4), (0, 6), (0, 8), (1, 1), (1, 3), (1, 5), (1, 7),
#          (2, 0), (2, 2), (2, 4), (2, 6), (3, 1), (3, 3), (3, 5), (4, 0), (4, 2),
#          (4, 4), (5, 1), (5, 3), (6, 0), (6, 2), (7, 1), (8, 0) の 25 通り.
# (c, e) は (a, g) と同じ 20 通り.
# d は 0, 1, 2, 3, 4 の 5 通り.
# よって 20 * 25 * 20 * 5 = 50000 通り.
#
# 一般に n 桁のとき n % 4 = 1 のとき解なし
# n % 4 = 3 のとき
# (n+1)/2 桁の選びかた ... 5 通り
# (n+3)/2, (n-1)/2 桁の選びかた ... 20 通り
# (n+5)/2, (n-3)/2 桁の選びかた ... 25 通り
# 合わせると
# 5 * 20 ^ (n + 1) / 4 * 25 ^ (n - 3) / 4 = 100 * 20 ^ (n - 3) / 4 * 25 ^ (n - 3) / 4
# = 100 * 500 ^ (n - 3) / 4


def main():
    cnt = 0
    for digit in range(1, 10):
        if digit % 2 == 0:
            cnt += 20 * 30**(digit // 2 - 1)
        elif digit % 4 == 3:
            cnt += 100 * 500**((digit - 3) // 4)
    return cnt


if __name__ == '__main__':
    print(main())
