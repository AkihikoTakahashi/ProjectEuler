# coding: utf-8

# h <= w <= l とすると最短距離 L は L = ((h+w)^2 + l^2)^0.5 となる.
# x := h + w として, L^2 = x^2 + l^2 (x, l は整数)とする.
# x を M 以下に分解する方法は
#
# 1. x <= M のとき int(x/2) 通り
# 2. M < x <= 2M のとき M+1-(x+1)/2 通り
#
# なぜなら x を偶数として,
# (1,x-1), (2,x-2), (3,x-3), ..., (x/2, x/2) の
# 全 x/2 個のうち, (i, x-i) が i<=M, x-i<=M となるものの個数は
# i <= x/2 <= M より 第2成分のみ考えればよく,
# x-1, x-2, ..., x-i, ..., x/2 のうち x-i > M となるのは
# (x-M-1)個.
# よって, 全 x/2 個のうち (x-M-1) 個を除けば x/2-(x-M-1) = M+1-x/2
# となる.
# xが奇数のとき 全 (x+1)/2 個となる.
# 同様の手順にて個数は M+1-(x+1)/2
# となる.
#
# ex.
# M=10, x=11
# (1,10),(2,9),(3,8),(4,7),(5,6)
#
# M=10, x=16
# (1,15),(2,15),(3,13),(4,12),(5,11),(6,10),(7,9),(8,8)
#
# M = 10, x=17
# (1,16),(2,15),(3,14),(4,13),(5,12),(6,11),(7,10),(8,9)


def main():
    LIM = 1000000
    cnt = 0
    l = 1

    while cnt <= LIM:
        l += 1
        for x in range(3, 2 * l):
            s = (l**2 + x**2)**0.5
            if int(s) == s:
                cnt += x // 2 if x <= l else l + 1 - (x + 1) // 2
    return l


if __name__ == '__main__':
    print(main())
